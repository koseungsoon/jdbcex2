plugins {
    id 'java'
    id 'war'
}

group 'com.green'
version '1.0-SNAPSHOT'


/*각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지를 정함*/
repositories {
    mavenCentral()
}


/*
ext라는 키워드는 build.gradle 에서 사용하는 전역변수를 설정하겠다는 의미
여기서는 junitVersion 전역변수를 생성하고, 그값을 5.9.2로 하겠다는 의미
*/

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('javax.servlet:javax.servlet-api:4.0.1')

    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.0.9'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'

    //DBCP
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '4.0.3'


    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'



    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    // VO를 DTO로 변환하거나 DTO를 VO로 변환해주는 라이브러리
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.1'

    //log4j2를 사용해야함 (보안상 1은 안됨)
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.20.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.20.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.20.0'


    //jstl
    implementation group: 'javax.servlet', name: 'jstl', version: '1.2'

}

test {
    useJUnitPlatform()
}